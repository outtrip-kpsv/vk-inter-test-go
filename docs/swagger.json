{
    "swagger": "2.0",
    "info": {
        "description": "API фильмотеки",
        "title": "Фильмотека API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/api/actor": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Получает всех актеров, если имя не указано, или актеров с определенным именем, если имя указано в запросе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Получает всех актеров или актеров с определенным именем",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя актера для фильтрации",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки, Доступные значения: 'name', 'date'",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список актеров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActorIo"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Отказано в доступе: ошибка токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Актер не найден",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Обновляет данные актера с данными, предоставленными в теле запроса.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Обновляет данные актера",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные актера для обновления",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленные данные актера",
                        "schema": {
                            "$ref": "#/definitions/repo.Actor"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Отказано в доступе: ошибка токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен: отсутствие необходимой роли",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Актер не найден",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Создает нового актера с данными, предоставленными в теле запроса.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Создает нового актера",
                "parameters": [
                    {
                        "description": "Данные актера",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.Actor"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно созданный актер",
                        "schema": {
                            "$ref": "#/definitions/repo.Actor"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Отказано в доступе: ошибка токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен: отсутствие необходимой роли",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Удаляет актера с указанным именем.",
                "tags": [
                    "Actors"
                ],
                "summary": "Удаляет актера по имени",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя актера для удаления",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление актера",
                        "schema": {
                            "$ref": "#/definitions/models.OkResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Отказано в доступе: ошибка токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен: отсутствие необходимой роли",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Актер не найден",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/create/user": {
            "post": {
                "description": "Creates a new user with the data provided in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Creates a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated token",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data format or unsupported characters in the username",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "get": {
                "description": "Authenticates a user with the provided data in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Authenticates a user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated token",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data format or unsupported characters in the username",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/movie": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Получает все фильмы, если ни один из параметров не указан, или фильмы с определенным заголовком или именем актера.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Получает все фильмы или фильмы с определенным заголовком или именем актера",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Заголовок фильма для фильтрации",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Имя актера для фильтрации",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки, Доступные значения: 'rating', 'title', 'date'",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список фильмов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MovieIo"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Отказано в доступе: ошибка токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Фильмы не найден",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Обновляет данные фильма с данными, предоставленными в теле запроса.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Обновляет данные фильма",
                "parameters": [
                    {
                        "description": "Данные фильма для обновления",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.Movie"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленные данные фильма",
                        "schema": {
                            "$ref": "#/definitions/repo.Movie"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Отказано в доступе: ошибка токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен: отсутствие необходимой роли",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Фильм не найден",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Создает новый фильм с данными, предоставленными в теле запроса.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Создает новый фильм",
                "parameters": [
                    {
                        "description": "Данные фильма",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovieIo"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно созданный фильм",
                        "schema": {
                            "$ref": "#/definitions/models.MovieIo"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Отказано в доступе: ошибка токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен: отсутствие необходимой роли",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Удаляет фильм с указанным ID.",
                "tags": [
                    "Movies"
                ],
                "summary": "Удаляет фильм по его ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID фильма для удаления",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление фильма",
                        "schema": {
                            "$ref": "#/definitions/models.OkResponse"
                        }
                    },
                    "400": {
                        "description": "Неверное значение ID или ошибка удаления",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Отказано в доступе: ошибка токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен: отсутствие необходимой роли",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ActorIo": {
            "type": "object",
            "properties": {
                "actor": {
                    "$ref": "#/definitions/repo.Actor"
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repo.Movie"
                    }
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.MovieIo": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repo.Actor"
                    }
                },
                "movie": {
                    "$ref": "#/definitions/repo.Movie"
                }
            }
        },
        "models.OkResponse": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "string"
                }
            }
        },
        "models.TokenResponse": {
            "type": "object",
            "properties": {
                "bearer": {
                    "type": "string"
                }
            }
        },
        "repo.Actor": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "birthDate": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "repo.Movie": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "releaseDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "repo.User": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                }
            }
        }
    }
}